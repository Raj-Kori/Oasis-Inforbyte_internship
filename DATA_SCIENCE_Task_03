import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from google.colab import drive

# Mount Google Drive
drive.mount('/content/drive', force_remount=True)

# Load the dataset from Google Drive
file_path = '/content/drive/MyDrive/DATA_SET/car_data.csv'
car_data = pd.read_csv(file_path)

# Data preprocessing
# Handle missing values, encode categorical variables, scale numerical features, etc.

# Perform one-hot encoding for categorical variables
car_data = pd.get_dummies(car_data, columns=['Fuel_Type', 'Selling_type', 'Transmission'], drop_first=True)

# Verify column names after one-hot encoding
print("Column Names:", car_data.columns)

# Splitting the dataset
X = car_data.drop("Selling_Price", axis=1)
y = car_data["Selling_Price"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model Selection and Training
model = LinearRegression()
model.fit(X_train, y_train)

# Model Evaluation
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("Mean Absolute Error:", mae)
print("R-squared:", r2)

# Visualization
# Plot actual vs. predicted prices
plt.figure(figsize=(10, 6))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual vs. Predicted Car Prices")
plt.show()

# Comment on the performance of the model based on evaluation metrics

# Conclusion and Deployment
# Summarize findings and potentially deploy the model for real-world use
